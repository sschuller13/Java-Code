/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package package2;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Arrays;

/**
 * @author Jaime Aranda
 * @date 2018/12/03
 *
 */
public class App2 extends javax.swing.JFrame {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * Creates new form App2
	 */
	public App2() {
		initComponents();
	}
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {
		jPanel1 = new javax.swing.JPanel();
		qLabel = new javax.swing.JLabel();
		aTxt = new javax.swing.JTextField();
		aLabel = new javax.swing.JLabel();
		qTxt = new javax.swing.JTextField();
		pLabel = new javax.swing.JLabel();
		pTxt = new javax.swing.JTextField();
		updateButton = new javax.swing.JButton();
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		qLabel.setText("Enter Your Question:");
		aLabel.setText("Enter Your Answer:");
		pLabel.setText("Enter Your FilePath:");
		updateButton.setBackground(new java.awt.Color(0, 204, 204));
		updateButton.setText("UPDATE");
		updateButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				updateButtonActionPerformed(evt);
			}
		});
		jPanel1.setBackground(new java.awt.Color(192, 192, 192));
		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup().addGap(31, 31, 31)
								.addGroup(jPanel1Layout
										.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING, false)
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addComponent(pLabel)
												.addPreferredGap(
														javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(pTxt,
														javax.swing.GroupLayout.PREFERRED_SIZE, 527,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addComponent(aLabel)
												.addPreferredGap(
														javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(aTxt,
														javax.swing.GroupLayout.PREFERRED_SIZE, 527,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addComponent(qLabel).addGap(41, 41, 41)
												.addComponent(qTxt,
														javax.swing.GroupLayout.PREFERRED_SIZE, 527,
														javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addGroup(jPanel1Layout.createSequentialGroup().addGap(355, 355, 355)
								.addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE,
										146, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(87, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(64, 64, 64)
						.addGroup(jPanel1Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(qLabel).addComponent(qTxt,
										javax.swing.GroupLayout.PREFERRED_SIZE, 39,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(72, 72, 72)
						.addGroup(jPanel1Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(aTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(aLabel))
						.addGap(86, 86, 86)
						.addGroup(jPanel1Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(pLabel).addComponent(pTxt,
										javax.swing.GroupLayout.PREFERRED_SIZE, 39,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(49, 49, 49)
						.addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(38, Short.MAX_VALUE)));
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(20, 20, 20)
								.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(26, Short.MAX_VALUE)));
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(30, 30, 30)
								.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(38, Short.MAX_VALUE)));
		pack();
	}// </editor-fold>
	private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {
		System.out.println("---- App2 started ----");
		String question = qTxt.getText();
		String answer = aTxt.getText();
		String path = pTxt.getText();
		try {
			QAData data = new QAData();
			data.loadQAObject(path);
			data.saveQA(question, answer);
			data.saveQAObject(path);
		} catch (ClassNotFoundException | FileNotFoundException ex) {
			new QAData(true);
			System.out.println("Could not read file. Creating size-zero Q&A array.");
		} finally {
			qTxt.setText("");
			aTxt.setText("");
			pTxt.setText("");
		}
		System.out.println("---- App2 Completed ----");
	}
	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new App2().setVisible(true);
			}
		});
	}
	// Variables declaration - do not modify
	private javax.swing.JLabel aLabel;
	private javax.swing.JTextField aTxt;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JLabel pLabel;
	private javax.swing.JTextField pTxt;
	private javax.swing.JLabel qLabel;
	private javax.swing.JTextField qTxt;
	private javax.swing.JButton updateButton;
	// End of variables declaration
}

//QAData Object class
class QAData implements Serializable {
	private static final long serialVersionUID = 1L;
	private String questions[];
	private String answers[];
	private int totalQA;
	public QAData() {
		questions = new String[1];
		answers = new String[1];
		totalQA = 0;
	}
	public QAData(boolean isSizeZero) {
		questions = new String[0];
		answers = new String[0];
	}
	public void saveQA(String question, String answer) {
		if (totalQA != 0) {
			// runtime increment of size
			questions = Arrays.copyOf(questions, questions.length + 1);
			answers = Arrays.copyOf(answers, answers.length + 1);
		}
		questions[totalQA] = question;
		answers[totalQA] = answer;
		totalQA += 1;
	}
	public String getQuestion(int no) {
		return questions[no];
	}
	public String getAnswer(int no) {
		return answers[no];
	}
	public int getTotalQA() {
		return totalQA;
	}
	public void saveQAObject(String path) throws FileNotFoundException {
		FileOutputStream fos = null;
		ObjectOutputStream oos = null;
		try {
			fos = new FileOutputStream(path);
			oos = new ObjectOutputStream(fos);
			System.out.println("Completed ** ");
			oos.writeObject(this);
			oos.close();
		} catch (FileNotFoundException e) {
			throw new FileNotFoundException();
		} catch (IOException e) {
			System.out.println("Unspecified I/O exception.");
		}
	}
	// read object to file
	public void loadQAObject(String path) throws ClassNotFoundException, FileNotFoundException {
		QAData result = null;
		try {
			File file = new File(path);
			FileInputStream fis = new FileInputStream(file);
			ObjectInputStream ois = new ObjectInputStream(fis);
			result = (QAData) ois.readObject();
			this.questions = result.questions;
			this.answers = result.answers;
			this.totalQA = result.totalQA;
			ois.close();
		} catch (EOFException eof) {
			System.out.println("Catched End of file exception by OBjectInputStream");
		} catch (FileNotFoundException e) {
			throw new FileNotFoundException();
		} catch (IOException e) {
			System.out.println("Catched Unspecified I/O exception.");
		}
	}
}

